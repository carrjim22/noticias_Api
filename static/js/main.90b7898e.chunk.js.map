{"version":3,"sources":["components/Header.js","components/Noticia.js","components/Noticias.js","components/Formulario.js","components/App.js","serviceWorker.js","index.js"],"names":["Header","props","react_default","a","createElement","className","href","titulo","Noticia","_props$noticia","noticia","urlToImage","description","title","url","imagen","src","alt","target","rel","Noticias","state","react_transition_group","this","noticias","map","key","classNames","timeout","components_Noticia","Component","Formulario","refSelect","React","createRef","buscarCategoria","e","preventDefault","_this","obtenerApi","current","value","onSubmit","ref","defaultValue","type","App","categoria","arguments","length","undefined","URI","concat","fetch","then","response","json","data","setState","articles","catch","err","console","error","components_Header","components_Formulario","components_Noticias","Boolean","window","location","hostname","match","ReactDOM","render","components_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.90b7898e.chunk.js","sourcesContent":["import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nconst Header = (props) =>{\r\n    return(\r\n        <nav>\r\n            <div className=\"nav-wrapper light-blue darken-3 \">\r\n            <a className=\"brand-logo center\" href=\"/\">{props.titulo}</a>\r\n        </div>\r\n        </nav>\r\n    ) \r\n}\r\nHeader.propTypes = {\r\n    titulo: PropTypes.string.isRequired\r\n}\r\nexport default Header;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\n\r\nconst Noticia = (props) => {\r\n    const {urlToImage, description, title, url,} =  props.noticia;\r\n    const imagen= urlToImage ? \r\n                    <div className=\"card-image\">\r\n                    <img src={urlToImage} alt={title}/>\r\n                    </div>\r\n                :\r\n                '';\r\n\r\n\r\n    return (\r\n        <div className=\"col s12 m6 l4\">\r\n            <div className=\"card\">\r\n               {imagen}\r\n                <div className=\"card-content\">\r\n                    <h3>{title}</h3>\r\n                    <p>{description}</p>\r\n                </div>\r\n                <div className=\"card-action\">\r\n                    <a href={url} className=\"waves-effects waves-light btn\" target=\"_blank\" rel = ' noopener noreferrer '>Leer</a>\r\n                </div>\r\n            </div>\r\n        </div>\r\n      );\r\n}\r\n\r\nNoticia.propTypes ={\r\n    noticia: PropTypes.shape({\r\n        urlToImage: PropTypes.string.null,\r\n        description: PropTypes.string.null,\r\n        title: PropTypes.string.isRequired,\r\n        url: PropTypes.string.isRequired\r\n    })\r\n}\r\n \r\nexport default Noticia;","import React, { Component } from 'react';\r\nimport Noticia from './Noticia'\r\nimport PropTypes from 'prop-types';\r\nimport {TransitionGroup, CSSTransition} from 'react-transition-group'\r\n\r\n\r\nclass Noticias extends Component {\r\n    state = {  }\r\n    render() { \r\n        \r\n        return ( \r\n            <div className=\"row\">\r\n            \r\n               \r\n               <TransitionGroup>\r\n\r\n                    {this.props.noticias.map(noticia =>(\r\n                        <CSSTransition key={noticia.url} classNames=\"fade\"  timeout={500}>\r\n                        <Noticia noticia = {noticia}/>\r\n                    </CSSTransition>\r\n                ))}\r\n               </TransitionGroup>\r\n                \r\n            </div>\r\n         );\r\n    }\r\n}\r\nNoticias.propTypes = {\r\n    noticias:PropTypes.array.isRequired\r\n}\r\n\r\n \r\nexport default Noticias;","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nclass Formulario  extends Component {\r\n    refSelect = React.createRef()\r\n\r\n    buscarCategoria = (e) => {\r\n        e.preventDefault();\r\n       this.props.obtenerApi(this.refSelect.current.value)\r\n    }\r\n\r\n    render() { \r\n        return ( \r\n            <div className=\"buscador row\">\r\n                <div className=\"col s12 m8 offset-m2\">\r\n                    <form onSubmit={this.buscarCategoria}>\r\n                        <h2>Noticias por categoría</h2> \r\n                        <div className=\"input-field col s12 m8\">\r\n                        <select ref={this.refSelect}>\r\n                            <option value=\"general\" defaultValue=\"general\">General</option>\r\n                            <option value=\"business\">Negocios</option>\r\n                            <option value=\"entertainment\">Entretenimiento</option>\r\n                            <option value=\"technology\">Tecnología</option>\r\n\r\n                        </select>\r\n                        </div>\r\n                        <div className=\"input-field  col s12 m4 enviar\">\r\n                            <input type=\"submit\" className=\"btn amber darken-4\" value=\"Buscar\"/>\r\n                        </div>\r\n                    </form> \r\n                </div>\r\n            </div>\r\n         );\r\n    }\r\n}\r\n \r\nFormulario.propTypes= {\r\n    obtenerApi: PropTypes.func.isRequired\r\n}\r\nexport default Formulario ;","import React, { Component } from 'react';\nimport Header from './Header';\nimport Noticias from './Noticias';\nimport Formulario from './Formulario';\n\n\n\nclass App extends Component {\n  state= {\n    noticias:[],\n\n  }\n\n  componentDidMount() {\n    this.obtenerApi();\n  }\n  obtenerApi = (categoria = 'general') => {\n    const URI = `https://newsapi.org/v2/top-headlines?country=mx&category=${categoria}&apiKey=911f9306c51748aea0da71bd58834c7f`\n    fetch(URI)\n      .then(response => response.json())\n      .then(data => {\n        this.setState({\n          noticias:data.articles\n        })\n      })\n      .catch(err => console.error('Se presentó un error'+err))\n  }\n  \n\n\n  render() {\n\n    return (\n      <div className=\"contenedor app\">\n        <Header titulo ='Noticias de hoy'/>\n        <div className=\"container white contenedor-noticias\">\n          <Formulario obtenerApi={this.obtenerApi}/>\n          <Noticias noticias={this.state.noticias}/>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App'\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}